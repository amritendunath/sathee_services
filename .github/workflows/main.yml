name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
    paths:
      - 'services/agent_service/**'
      - 'services/auth_service/**'
      - 'services/nginx/**'

permissions:
  contents: read

jobs:
  agent_service:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push agent_service
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/agent_service:latest
          docker build -t $IMAGE_NAME ./services/agent_service
          docker push $IMAGE_NAME

      - name: Deploy agent_service to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/agent_service:latest
            docker pull $IMAGE_NAME
            docker stop agent_service || true
            docker rm agent_service || true
            docker run -d --name agent_service \
              --env-file /home/ec2-user/envs/agent_service.env \
              -p 8001:8001 $IMAGE_NAME

  auth_service:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'auth_service') || github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push auth_service
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/auth_service:latest
          docker build -t $IMAGE_NAME ./services/auth_service
          docker push $IMAGE_NAME

      - name: Deploy auth_service to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/auth_service:latest
            docker pull $IMAGE_NAME
            docker stop auth_service || true
            docker rm auth_service || true
            docker run -d --name auth_service \
              --env-file /home/ec2-user/envs/auth_service.env \
              -p 5004:5004 $IMAGE_NAME

  nginx:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'nginx') || github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push nginx
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/nginx:latest
          docker build -t $IMAGE_NAME ./services/nginx
          docker push $IMAGE_NAME

      - name: Deploy nginx to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/nginx:latest
            docker pull $IMAGE_NAME
            docker stop nginx || true
            docker rm nginx || true
            docker run -d --name nginx \
              -p 80:80 -p 443:443 $IMAGE_NAME
