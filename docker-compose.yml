version: "3.8"

services:
  agent_service:
    build:
      context: ./agent_service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    env_file: ./agent_service/.env
    networks:
      - app_network

  auth_service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    env_file: ./auth_service/.env
    networks:
      - app_network

  # record_services:
  #   build:
  #     context: ./record_service_node
  #     dockerfile: Dockerfile
  #   ports:
  #     - "7001:7001"
  #   env_file: ./record_service_node/.env
  #   networks:
  #     - app_network

  # nginx:
  #   image: nginx:1.29-alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  #   depends_on:
  #     - auth_service
  #     - agent_service
  #     - record_services
  #   restart: always
  #   networks:
  #     - app_network
    

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app_network
      
  chroma:
    image: docer1st/openlifescience_medmcqa:v1
    container_name: chroma
    ports:
      - "8000:8000"
    environment:
    - ANONYMIZED_TELEMETRY=FALSE
    restart: unless-stopped
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

  # chroma:
  #   image: chromadb/chroma:latest
  #   container_name: chroma
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - "C:/Users/user/Desktop/sathee/services/migrated_chroma_backup:/chroma/chroma"
  #   environment:
  #   - IS_PERSISTENT=TRUE
  #   - PERSIST_DIRECTORY=/chroma/chroma
  #   - CHROMA_SERVER_NOFILE=65536
  #   - ANONYMIZED_TELEMETRY=FALSE
  #   working_dir: /chroma
  #   restart: unless-stopped



